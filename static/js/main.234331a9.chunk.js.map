{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","SortKeys","goodsFromServer","defaultSortSettings","sortValue","isReversed","App","useState","sortSettings","setSortSettings","goods","useMemo","sortedGoods","sort","good1","good2","sortByLength","length","sortByAlphabet","localeCompare","reverse","sortGoods","handleSortClick","key","value","className","type","onClick","sortValueKey","cn","reverseValueKey","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KA2BKA,EAKAC,E,yFA3BQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAUIC,EAAoC,CAAEC,UAAW,GAAIC,YAAY,I,SAElEL,K,wBAAAA,E,6BAAAA,M,cAKAC,K,yBAAAA,E,8BAAAA,M,KA2BE,IAAMK,EAAgB,WAC3B,MAAwCC,mBAASJ,GAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KAEMC,EAAQC,mBACZ,kBA1BJ,SACED,EADF,GAGU,IADNN,EACK,EADLA,UAAWC,EACN,EADMA,WAEPO,EAAW,YAAOF,GAexB,OAbIN,GACFQ,EAAYC,MAAK,SAACC,EAAOC,GACvB,OAAQX,GACN,KAAKJ,EAASgB,aACZ,OAAOF,EAAMG,OAASF,EAAME,OAC9B,KAAKjB,EAASkB,eACZ,OAAOJ,EAAMK,cAAcJ,GAC7B,QACE,OAAO,MAKRV,EAAaO,EAAYQ,UAAYR,EAOpCS,CAAUnB,EAAiBM,KACjC,CAACA,IAGKJ,EAA0BI,EAA1BJ,UAAWC,EAAeG,EAAfH,WAEbiB,EAAkB,SAACC,EAAeC,GAAhB,OAA8C,WACpEf,EAAgB,2BAAKD,GAAN,kBAAqBe,EAAMC,OAG5C,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAASL,EACPrB,EAAS2B,aACT5B,EAASkB,gBAEXO,UAAWI,IAAG,iBAAkB,CAC9B,WAAYzB,IAAcJ,EAASkB,iBAPvC,iCAaA,wBACEQ,KAAK,SACLC,QAASL,EACPrB,EAAS2B,aACT5B,EAASgB,cAEXS,UAAWI,IAAG,oBAAqB,CACjC,WAAYzB,IAAcJ,EAASgB,eAPvC,4BAaA,wBACEU,KAAK,SACLC,QAASL,EAAgBrB,EAAS6B,iBAAkBzB,GACpDoB,UAAWI,IAAG,oBAAqB,CACjC,YAAaxB,IAJjB,sBAUED,GAAaC,IACb,wBACEqB,KAAK,SACLD,UAAU,4BACVE,QAAS,kBAAMlB,EAAgBN,IAHjC,sBAUJ,6BACGO,EAAMqB,KAAI,SAAAC,GAAI,OAAK,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCzHpDC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.234331a9.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport React, { useMemo, useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype Goods = string[];\n\ninterface SortSettings {\n  sortValue?: string,\n  isReversed?: boolean,\n}\n\nconst defaultSortSettings: SortSettings = { sortValue: '', isReversed: false };\n\nenum SortType {\n  sortByLength = 'byLength',\n  sortByAlphabet = 'ByAlphabet',\n}\n\nenum SortKeys {\n  sortValueKey = 'sortValue',\n  reverseValueKey = 'isReversed',\n}\n\nfunction sortGoods(\n  goods: Goods,\n  { sortValue, isReversed }: SortSettings,\n): Goods {\n  const sortedGoods = [...goods];\n\n  if (sortValue) {\n    sortedGoods.sort((good1, good2) => {\n      switch (sortValue) {\n        case SortType.sortByLength:\n          return good1.length - good2.length;\n        case SortType.sortByAlphabet:\n          return good1.localeCompare(good2);\n        default:\n          return 0;\n      }\n    });\n  }\n\n  return isReversed ? sortedGoods.reverse() : sortedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortSettings, setSortSettings] = useState(defaultSortSettings);\n\n  const goods = useMemo(\n    () => sortGoods(goodsFromServer, sortSettings),\n    [sortSettings],\n  );\n\n  const { sortValue, isReversed } = sortSettings;\n\n  const handleSortClick = (key: SortKeys, value: SortType | boolean) => () => {\n    setSortSettings({ ...sortSettings, [key]: value });\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={handleSortClick(\n            SortKeys.sortValueKey,\n            SortType.sortByAlphabet,\n          )}\n          className={cn('button is-info', {\n            'is-light': sortValue !== SortType.sortByAlphabet,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={handleSortClick(\n            SortKeys.sortValueKey,\n            SortType.sortByLength,\n          )}\n          className={cn('button is-success', {\n            'is-light': sortValue !== SortType.sortByLength,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={handleSortClick(SortKeys.reverseValueKey, !isReversed)}\n          className={cn('button is-warning', {\n            'is-light': !isReversed,\n          })}\n        >\n          Reverse\n        </button>\n\n        {(sortValue || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => setSortSettings(defaultSortSettings)}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {goods.map(good => (<li data-cy=\"Good\" key={good}>{good}</li>))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}